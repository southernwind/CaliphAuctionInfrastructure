---
- name: Ensure packages for certbot
  apt:
    name:
      - certbot
      - python3-certbot-nginx
    state: present
    update_cache: yes

- name: Ensure webroot directory exists
  file:
    path: "{{ letsencrypt_webroot }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Check existing primary certificate
  stat:
    path: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/fullchain.pem"
  register: le_cert_stat

- name: Obtain/renew certificate (webroot)
  command: >-
    certbot certonly --webroot -w {{ letsencrypt_webroot }}
    {{ letsencrypt_domains | map('regex_replace','^(.*)$','-d \1') | join(' ') }}
    --email {{ letsencrypt_email }} --agree-tos --non-interactive --keep-until-expiring
  register: certbot_result
  changed_when: >-
    ('Congratulations' in certbot_result.stdout) or ('Renewing an existing certificate' in certbot_result.stdout)
  failed_when: certbot_result.rc != 0
  when: not le_cert_stat.stat.exists
  notify: Reload nginx

- name: Reconfigure nginx to enable HTTPS if cert obtained
  include_role:
    name: nginx
  when: certbot_result is defined and certbot_result is changed

- name: Set fact for primary domain certificate paths
  set_fact:
    le_primary_domain: "{{ letsencrypt_domains[0] }}"
    le_cert_dir: "/etc/letsencrypt/live/{{ letsencrypt_domains[0] }}"

- name: Debug cert path
  debug:
    msg: "Using certificate path {{ le_cert_dir }}"

- name: Ensure deploy hook directory exists
  file:
    path: /etc/letsencrypt/renewal-hooks/deploy
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Install nginx reload deploy hook
  copy:
    dest: /etc/letsencrypt/renewal-hooks/deploy/10-reload-nginx
    owner: root
    group: root
    mode: '0755'
    content: |
      #!/bin/bash
      # Auto-generated by Ansible: reload nginx only after successful renewal
      /usr/bin/systemctl reload nginx 2>/dev/null || true