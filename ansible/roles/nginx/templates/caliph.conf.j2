server {
    listen 80;
    server_name {{ nginx_server_name }};
    # ACME challenge & redirect
    location /.well-known/acme-challenge/ {
        root {{ letsencrypt_webroot }};
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name {{ nginx_server_name }};

    ssl_certificate     /etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_domains[0] }}/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # Front (Vue built cdn)
    location / {
        root {{ nginx_front_root }};
        try_files $uri $uri/ /index.html;
    }

    location /.well-known/acme-challenge/ {
        root {{ letsencrypt_webroot }};
    }

    # Static cdn
    location /cdn/ {
        alias {{ nginx_cdn_root }}/;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Backend API reverse proxy
    location /api/ {
        proxy_pass {{ nginx_backend_upstream }}/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
